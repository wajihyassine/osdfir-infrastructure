apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-yeti-api
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/component: api
    {{- include "yeti.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: api
      {{- include "yeti.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: api
        {{- include "yeti.selectorLabels" . | nindent 8 }}
    spec:
      hostNetwork: false
      hostIPC: false
      automountServiceAccountToken: false
      initContainers:
        {{- include "yeti.initContainer" . | nindent 8 }}
      containers:
        - name: api
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          command: ["sh", "-c", "/docker-entrypoint.sh webserver"]
          {{- if and (not .Release.IsUpgrade) .Values.config.createUser }}
          lifecycle:
            postStart:
              exec:
                command: ["sh", "-c", "if ! uv run python yetictl/cli.py list-users | grep -q 'Username: yeti'; then uv run python yetictl/cli.py create-user yeti $YETI_USER_PASSWORD --admin; fi"]
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            seccompProfile:
              type: RuntimeDefault
          env:
          {{- include "yeti.envs" . | nindent 12 }}
          ports:
            - containerPort: 8000
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
